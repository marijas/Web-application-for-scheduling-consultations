cmdhistory=["(require '[clojure.java.jdbc \:as jdbc])" "(require [clojure.java.jdbc \:as jdbc])" "(require '[clojure.java.jdbc \:as jdbc])" "(def db-spec {\:classname \\"org.slite.JDBC\\"\\r\\n                 \:subprotocol \\"sqlite\\"\\r\\n                 \:subname \\"test.db\\"})" "(jdbc/with-connection db-spec)" "(require '[clojure.java.jdbc \:as jdbc])" "(def db-spec {\:classname \\"org.slite.JDBC\\"\\r\\n                    \:subprotocol \\"sqlite\\"\\r\\n                    \:subname \\"test.db\\"})" "(def db-spec {\:classname \\"com.mysql.jdbc.Driver\\"\\r\\n              \:subprotocol \\"mysql\\"\\r\\n              \:subname \\"//localhost\:3306/sistem_konsultacija\\"\\r\\n              \:username \\"root\\"\\r\\n              \:password \\"\\"})" "(jdbc/with-connection db-spec)" "(def db-spec {\:classname \\"com.mysql.jdbc.Driver\\"\\r\\n              \:subprotocol \\"mysql\\"\\r\\n              \:subname \\"//localhost\:3306/sistem_konsultacija\\"\\r\\n              \:username \\"rot\\"\\r\\n              \:password \\"\\"})" "(jdbc/with-connection db-spec)" "(def db-spec {\:classname \\"com.mysql.jdbc.Driver\\"\\r\\n              \:subprotocol \\"mysql\\"\\r\\n              \:subname \\"//localhost\:3306/sistem_konsultacija\\"\\r\\n              \:username \\"root\\"\\r\\n              \:password \\"\\"})" "(jdbc/with-connection db-spec)" "(require '[clojure.java.jdbc \:as jdbc])" "(def db-spec {\:classname \\"com.mysql.jdbc.Driver\\"\\r\\n                 \:subprotocol \\"mysql\\"\\r\\n                 \:subname \\"//localhost\:3306/sistem_konsultacija\\"\\r\\n                 \:username \\"root\\"\\r\\n                 \:password \\"\\"})" "(jdbc/with-connection db-spec)" "(def db-spec {\:classname \\"com.mysql.jdbc.Driver\\"\\r\\n                 \:subprotocol \\"mysql\\"\\r\\n                 \:subname \\"//localhost\:3306/sistem_konsultacija\\"\\r\\n                 \:username \\"marija\\"\\r\\n                 \:password \\"marija\\"})" "(jdbc/with-connection db-spec)" "(require '[clojure.java.jdbc \:as jdbc])" "(def db-spec {\:classname \\"com.mysql.jdbc.Driver\\"\\r\\n              \:subprotocol \\"mysql\\"\\r\\n              \:subname \\"//localhost\:3306/sistem_konsultacija\\"\\r\\n              \:username \\"root\\"\\r\\n              \:password \\"\\"})" "(jdbc/with-connection db-spec)" "(require '[clojure.java.jdbc \:as jdbc])" "(def db-spec {\:classname \\"com.mysql.jdbc.Driver\\"\\r\\n                 \:subprotocol \\"mysql\\"\\r\\n                 \:subname \\"//localhost\:3306/sistem_konsultacija\\"\\r\\n                 \:username \\"root\\"\\r\\n                 \:password \\"\\"})" "(jdbc/with-connection db-spec)" "(require '[clojure.java.jdbc \:as jdbc])" "(def db-spec {\:classname \\"com.mysql.jdbc.Driver\\"\\r\\n                    \:subprotocol \\"mysql\\"\\r\\n                    \:subname \\"//localhost\:3306/sistem_konsultacija\\"\\r\\n                    \:username \\"root\\"\\r\\n                    \:password \\"\\"})" "(jdbc/with-connection db-spec)" "(require '[clojure.java.jdbc \:as j]\\r\\n         '[clojure.java.jdbc.sql \:as s])" "(def mysql-db {\:subprotocol \\"mysql\\"\\r\\n               \:subname \\"//127.0.0.1\:3306/sistem_konsultacija\\"\\r\\n               \:user \\"root\\"\\r\\n               \:password \\"\\"})" "(require '[clojure.java.jdbc \:as jdbc])" "(\:use [clojure.contrib.sql \:as sql])" "(\:require '[clojure.contrib.sql \:as sql])" "(def db {\:classname \\"com.mysql.jdbc.Driver\\"\\r\\n         \:subprotocol \\"mysql\\"\\r\\n         \:subname \\"//127.0.0.1\:3306/sistem_konsultacija\\"\\r\\n         \:database \\"sistem_konsultacija\\"\\r\\n         \:user \\"root\\"\\r\\n         \:password \\"\\"})" "(defn db-info\\r\\n  []\\r\\n  (with-connection db\\r\\n    (map table-info (do-prepared \\"select * from korisnik\\" (list (\:database db))))))" "(with-connection db\\r\\n  (with-query-results res [\\"select * from korisnik\\"]\\r\\n                      (doall res)))" "(jdbc/with-connection db)" "(jdbc/with-connection db\\r\\n(jdbc/with-query-results res [\\"SELECT * FROM korisnik\\"]\\r\\n(doall res)))" "(defn fetch-results [query]\\r\\n  (jdbc/with-connection db-spec\\r\\n    (jdbc/with-query-results res query\\r\\n      (doall res))))" "(jdbc/with-connection db)" "(defn fetch-results [query]\\r\\n  (jdbc/with-connection db\\r\\n    (jdbc/with-query-results res query\\r\\n      (doall res))))" "(fetch-results [\\"SELECT * FROM korisnik WHERE korisnicko_ime \= ?\\" marija \\" and korisnicka_sifra \= ?\\" marija])" "(fetch-results [\\"SELECT * FROM korisnik WHERE korisnicko_ime \= marija and korisnicka_sifra \= marija\\"])" "(fetch-results [\\"SELECT * FROM korisnik WHERE korisnicko_ime \= 'marija' and korisnicka_sifra \= 'marija'\\"])" "(fetch-results [\\"SELECT * FROM korisnik WHERE korisnicko_ime \= ?\\" 'marija' \\"and korisnicka_sifra \= ?\\"'marija'])" "(defn login\\r\\n  \\"Username and password validation\\"\\r\\n  [user pass]\\r\\n  (fetch-results [\\"SELECT * FROM korisnik WHERE korisnicko_ime \= ?\\" user \\" and korisnicka_sifra \= ?\\" pass]))" "(login marija marija)" "(login \\"marija\\" \\"marija\\")" "(login 'marija' 'marija')" "(select korisnik\\r\\n(with nastavnik_predmet)\\r\\n(where {\:korisnicko_ime \\"11\\"}))" "(\:require [clojure.java.jdbc \:as jdbc])" "(require '[clojure.java.jdbc \:as jdbc])" "(\:use '[clojure.contrib.sql \:as sql])" "(def db {\:classname \\"com.mysql.jdbc.Driver\\"\\r\\n            \:subprotocol \\"mysql\\"\\r\\n            \:subname \\"//127.0.0.1\:3306/consultation\\"\\r\\n            \:database \\"consultation\\"\\r\\n            \:user \\"root\\"\\r\\n            \:password \\"\\"})" "(jdbc/with-connection db\\r\\n   (jdbc/with-query-results res [\\"SELECT * FROM user\\"]\\r\\n   (doall res)))" "(defn fetch-results [query]\\r\\n  (jdbc/with-connection db-spec\\r\\n    (jdbc/with-query-results res query\\r\\n      (doall res))))" "(defn fetch-results [query]\\r\\n  (jdbc/with-connection db\\r\\n    (jdbc/with-query-results res query\\r\\n      (doall res))))" "(defn login\\r\\n  \\"Username and password validation\\"\\r\\n  [user pass]\\r\\n  (fetch-results [\\"SELECT * FROM user WHERE username \= ?\\" user \\" and password \= ?\\" pass]))" "(login 11 22)" "(defn login\\r\\n  \\"Username and password validation\\"\\r\\n  [user pass]\\r\\n  (fetch-results [\\"SELECT * FROM user WHERE username \= 11 and password \= 22\\" ]))" "(login 11 22)" "(reduce marija savic)" "(reduce str[\\"MARIJA\\" 22])" "(reduce str[MARIJA 22])" "(defn login\\r\\n  \\"Username and password validation\\"\\r\\n  [user pass]\\r\\n  (fetch-results \\n    (reduce str[\\"SELECT * FROM user WHERE username \= \\" 'user' \\" password \= \\" 'pass'])))" "(login 11 22)" "(defn login\\r\\n  \\"Username and password validation\\"\\r\\n  [user pass]\\r\\n  (fetch-results \\n    (reduce str[\\"SELECT * FROM user WHERE username \= \\" 'user' \\" and password \= \\" 'pass'])))" "(login 11 22)" "(defn login\\r\\n  \\"Username and password validation\\"\\r\\n  [user pass]\\r\\n  (fetch-results \\n    (reduce str[\\"SELECT * FROM user WHERE username \= \\" 'user \\" and password \= \\" 'pass])))" "(login 11 22)" "(defn login\\r\\n  \\"Username and password validation\\"\\r\\n  [user pass]\\r\\n  (fetch-results \\n    (reduce str[\\"SELECT * FROM user WHERE username \= \\" user \\" and password \= \\" pass])))" "(login 11 22)" "(let [a 1 b 2]\\r\\n  (str a \\"+\\" b \\"\=\\" (+ a b)))\\r\\n\\"1+2\=3\\"" "(defn login\\r\\n  \\"Username and password validation\\"\\r\\n  [user pass]\\r\\n  (fetch-results [\\"SELECT * FROM user WHERE username \= 11 and password \= 22\\" ]))" "(defn login\\r\\n  \\"Username and password validation\\"\\r\\n  [user pass]\\r\\n  (fetch-results [(str \\"SELECT * FROM user WHERE username \= \\"user\\" and password \= \\"pass)]))" "(login 11 22)" "(login 11 2)"]
eclipse.preferences.version=1
